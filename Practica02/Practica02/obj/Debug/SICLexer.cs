//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\a_k_n\Documents\Programas\Programacion de sistemas\Practica02\Practica02\SIC.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Practica02 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SICLexer : Lexer {
	public const int
		INIT=1, ACABA=2, DIRBYTE=3, OPERANDBYTE=4, DIRECTIVA=5, EXEP=6, INSTRUCCION=7, 
		OPERANDO=8, ETIQUETA=9, ENTER=10, WS=11;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INIT", "ACABA", "DIRBYTE", "OPERANDBYTE", "DIRECTIVA", "EXEP", "INSTRUCCION", 
		"OPERANDO", "ETIQUETA", "ENTER", "WS"
	};


	public SICLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, "'\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INIT", "ACABA", "DIRBYTE", "OPERANDBYTE", "DIRECTIVA", "EXEP", 
		"INSTRUCCION", "OPERANDO", "ETIQUETA", "ENTER", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SIC.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\r\xE2\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x5\x2!\n\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x5\x3(\n\x3\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x5\x4\x30\n\x4\x3\x5\x3\x5\x3\x5\a\x5\x35"+
		"\n\x5\f\x5\xE\x5\x38\v\x5\x3\x5\a\x5;\n\x5\f\x5\xE\x5>\v\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\a\x5\x44\n\x5\f\x5\xE\x5G\v\x5\x3\x5\a\x5J\n\x5\f\x5\xE\x5"+
		"M\v\x5\x3\x5\x5\x5P\n\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3"+
		"\x6\x3\x6\x3\x6\x3\x6\x3\x6\x5\x6^\n\x6\x3\x6\x5\x6\x61\n\x6\x3\a\x3\a"+
		"\x3\a\x3\a\x3\a\x3\a\x5\ai\n\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x5\b\xB5\n\b\x3\b\x5"+
		"\b\xB8\n\b\x3\t\x6\t\xBB\n\t\r\t\xE\t\xBC\x3\t\x5\t\xC0\n\t\x3\t\x3\t"+
		"\x3\t\x5\t\xC5\n\t\x3\n\x6\n\xC8\n\n\r\n\xE\n\xC9\x3\n\a\n\xCD\n\n\f\n"+
		"\xE\n\xD0\v\n\x3\n\x3\n\x3\n\x5\n\xD5\n\n\x3\n\x5\n\xD8\n\n\x3\n\x5\n"+
		"\xDB\n\n\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x2\x2\x2\r\x3\x2\x3\x5\x2\x4\a"+
		"\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2"+
		"\r\x3\x2\b\x3\x2))\x3\x2\x32;\x3\x2\x43\\\x3\x2\x43H\x4\x2JJjj\x5\x2\v"+
		"\v\xF\xF\"\"\x10E\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2"+
		"\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2"+
		"\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2"+
		"\x2\x2\x3\x19\x3\x2\x2\x2\x5\"\x3\x2\x2\x2\a)\x3\x2\x2\x2\tO\x3\x2\x2"+
		"\x2\v]\x3\x2\x2\x2\r\x62\x3\x2\x2\x2\xF\xB4\x3\x2\x2\x2\x11\xBA\x3\x2"+
		"\x2\x2\x13\xDA\x3\x2\x2\x2\x15\xDC\x3\x2\x2\x2\x17\xDE\x3\x2\x2\x2\x19"+
		"\x1A\aU\x2\x2\x1A\x1B\aV\x2\x2\x1B\x1C\a\x43\x2\x2\x1C\x1D\aT\x2\x2\x1D"+
		"\x1E\aV\x2\x2\x1E \x3\x2\x2\x2\x1F!\a\v\x2\x2 \x1F\x3\x2\x2\x2 !\x3\x2"+
		"\x2\x2!\x4\x3\x2\x2\x2\"#\aG\x2\x2#$\aP\x2\x2$%\a\x46\x2\x2%\'\x3\x2\x2"+
		"\x2&(\a\v\x2\x2\'&\x3\x2\x2\x2\'(\x3\x2\x2\x2(\x6\x3\x2\x2\x2)*\a\x44"+
		"\x2\x2*+\a[\x2\x2+,\aV\x2\x2,-\aG\x2\x2-/\x3\x2\x2\x2.\x30\a\v\x2\x2/"+
		".\x3\x2\x2\x2/\x30\x3\x2\x2\x2\x30\b\x3\x2\x2\x2\x31\x32\a\x45\x2\x2\x32"+
		"\x36\t\x2\x2\x2\x33\x35\t\x3\x2\x2\x34\x33\x3\x2\x2\x2\x35\x38\x3\x2\x2"+
		"\x2\x36\x34\x3\x2\x2\x2\x36\x37\x3\x2\x2\x2\x37<\x3\x2\x2\x2\x38\x36\x3"+
		"\x2\x2\x2\x39;\t\x4\x2\x2:\x39\x3\x2\x2\x2;>\x3\x2\x2\x2<:\x3\x2\x2\x2"+
		"<=\x3\x2\x2\x2=?\x3\x2\x2\x2><\x3\x2\x2\x2?P\t\x2\x2\x2@\x41\aZ\x2\x2"+
		"\x41\x45\t\x2\x2\x2\x42\x44\t\x3\x2\x2\x43\x42\x3\x2\x2\x2\x44G\x3\x2"+
		"\x2\x2\x45\x43\x3\x2\x2\x2\x45\x46\x3\x2\x2\x2\x46K\x3\x2\x2\x2G\x45\x3"+
		"\x2\x2\x2HJ\t\x5\x2\x2IH\x3\x2\x2\x2JM\x3\x2\x2\x2KI\x3\x2\x2\x2KL\x3"+
		"\x2\x2\x2LN\x3\x2\x2\x2MK\x3\x2\x2\x2NP\t\x2\x2\x2O\x31\x3\x2\x2\x2O@"+
		"\x3\x2\x2\x2P\n\x3\x2\x2\x2QR\aY\x2\x2RS\aQ\x2\x2ST\aT\x2\x2T^\a\x46\x2"+
		"\x2UV\aT\x2\x2VW\aG\x2\x2WX\aU\x2\x2X^\a\x44\x2\x2YZ\aT\x2\x2Z[\aG\x2"+
		"\x2[\\\aU\x2\x2\\^\aY\x2\x2]Q\x3\x2\x2\x2]U\x3\x2\x2\x2]Y\x3\x2\x2\x2"+
		"^`\x3\x2\x2\x2_\x61\a\v\x2\x2`_\x3\x2\x2\x2`\x61\x3\x2\x2\x2\x61\f\x3"+
		"\x2\x2\x2\x62\x63\aT\x2\x2\x63\x64\aU\x2\x2\x64\x65\aW\x2\x2\x65\x66\a"+
		"\x44\x2\x2\x66h\x3\x2\x2\x2gi\a\v\x2\x2hg\x3\x2\x2\x2hi\x3\x2\x2\x2i\xE"+
		"\x3\x2\x2\x2jk\a\x43\x2\x2kl\a\x46\x2\x2l\xB5\a\x46\x2\x2mn\a\x43\x2\x2"+
		"no\aP\x2\x2o\xB5\a\x46\x2\x2pq\a\x45\x2\x2qr\aQ\x2\x2rs\aO\x2\x2s\xB5"+
		"\aR\x2\x2tu\a\x46\x2\x2uv\aK\x2\x2v\xB5\aX\x2\x2w\xB5\aL\x2\x2xy\aL\x2"+
		"\x2yz\aG\x2\x2z\xB5\aS\x2\x2{|\aL\x2\x2|}\aI\x2\x2}\xB5\aV\x2\x2~\x7F"+
		"\aL\x2\x2\x7F\x80\aN\x2\x2\x80\xB5\aV\x2\x2\x81\x82\aL\x2\x2\x82\x83\a"+
		"U\x2\x2\x83\x84\aW\x2\x2\x84\xB5\a\x44\x2\x2\x85\x86\aN\x2\x2\x86\x87"+
		"\a\x46\x2\x2\x87\xB5\a\x43\x2\x2\x88\x89\aN\x2\x2\x89\x8A\a\x46\x2\x2"+
		"\x8A\x8B\a\x45\x2\x2\x8B\xB5\aJ\x2\x2\x8C\x8D\aN\x2\x2\x8D\x8E\a\x46\x2"+
		"\x2\x8E\xB5\aN\x2\x2\x8F\x90\aN\x2\x2\x90\x91\a\x46\x2\x2\x91\xB5\aZ\x2"+
		"\x2\x92\x93\aO\x2\x2\x93\x94\aW\x2\x2\x94\xB5\aN\x2\x2\x95\x96\aQ\x2\x2"+
		"\x96\xB5\aT\x2\x2\x97\x98\aT\x2\x2\x98\xB5\a\x46\x2\x2\x99\x9A\aU\x2\x2"+
		"\x9A\x9B\aV\x2\x2\x9B\xB5\a\x43\x2\x2\x9C\x9D\aU\x2\x2\x9D\x9E\aV\x2\x2"+
		"\x9E\x9F\a\x45\x2\x2\x9F\xB5\aJ\x2\x2\xA0\xA1\aU\x2\x2\xA1\xA2\aV\x2\x2"+
		"\xA2\xB5\aN\x2\x2\xA3\xA4\aU\x2\x2\xA4\xA5\aV\x2\x2\xA5\xA6\aU\x2\x2\xA6"+
		"\xB5\aY\x2\x2\xA7\xA8\aU\x2\x2\xA8\xA9\aV\x2\x2\xA9\xB5\aZ\x2\x2\xAA\xAB"+
		"\aU\x2\x2\xAB\xAC\aW\x2\x2\xAC\xB5\a\x44\x2\x2\xAD\xAE\aV\x2\x2\xAE\xB5"+
		"\a\x46\x2\x2\xAF\xB0\aV\x2\x2\xB0\xB1\aK\x2\x2\xB1\xB5\aZ\x2\x2\xB2\xB3"+
		"\aY\x2\x2\xB3\xB5\a\x46\x2\x2\xB4j\x3\x2\x2\x2\xB4m\x3\x2\x2\x2\xB4p\x3"+
		"\x2\x2\x2\xB4t\x3\x2\x2\x2\xB4w\x3\x2\x2\x2\xB4x\x3\x2\x2\x2\xB4{\x3\x2"+
		"\x2\x2\xB4~\x3\x2\x2\x2\xB4\x81\x3\x2\x2\x2\xB4\x85\x3\x2\x2\x2\xB4\x88"+
		"\x3\x2\x2\x2\xB4\x8C\x3\x2\x2\x2\xB4\x8F\x3\x2\x2\x2\xB4\x92\x3\x2\x2"+
		"\x2\xB4\x95\x3\x2\x2\x2\xB4\x97\x3\x2\x2\x2\xB4\x99\x3\x2\x2\x2\xB4\x9C"+
		"\x3\x2\x2\x2\xB4\xA0\x3\x2\x2\x2\xB4\xA3\x3\x2\x2\x2\xB4\xA7\x3\x2\x2"+
		"\x2\xB4\xAA\x3\x2\x2\x2\xB4\xAD\x3\x2\x2\x2\xB4\xAF\x3\x2\x2\x2\xB4\xB2"+
		"\x3\x2\x2\x2\xB5\xB7\x3\x2\x2\x2\xB6\xB8\a\v\x2\x2\xB7\xB6\x3\x2\x2\x2"+
		"\xB7\xB8\x3\x2\x2\x2\xB8\x10\x3\x2\x2\x2\xB9\xBB\t\x3\x2\x2\xBA\xB9\x3"+
		"\x2\x2\x2\xBB\xBC\x3\x2\x2\x2\xBC\xBA\x3\x2\x2\x2\xBC\xBD\x3\x2\x2\x2"+
		"\xBD\xBF\x3\x2\x2\x2\xBE\xC0\t\x6\x2\x2\xBF\xBE\x3\x2\x2\x2\xBF\xC0\x3"+
		"\x2\x2\x2\xC0\xC4\x3\x2\x2\x2\xC1\xC2\a.\x2\x2\xC2\xC3\a\"\x2\x2\xC3\xC5"+
		"\aZ\x2\x2\xC4\xC1\x3\x2\x2\x2\xC4\xC5\x3\x2\x2\x2\xC5\x12\x3\x2\x2\x2"+
		"\xC6\xC8\t\x4\x2\x2\xC7\xC6\x3\x2\x2\x2\xC8\xC9\x3\x2\x2\x2\xC9\xC7\x3"+
		"\x2\x2\x2\xC9\xCA\x3\x2\x2\x2\xCA\xCE\x3\x2\x2\x2\xCB\xCD\t\x3\x2\x2\xCC"+
		"\xCB\x3\x2\x2\x2\xCD\xD0\x3\x2\x2\x2\xCE\xCC\x3\x2\x2\x2\xCE\xCF\x3\x2"+
		"\x2\x2\xCF\xD4\x3\x2\x2\x2\xD0\xCE\x3\x2\x2\x2\xD1\xD2\a.\x2\x2\xD2\xD3"+
		"\a\"\x2\x2\xD3\xD5\aZ\x2\x2\xD4\xD1\x3\x2\x2\x2\xD4\xD5\x3\x2\x2\x2\xD5"+
		"\xD7\x3\x2\x2\x2\xD6\xD8\a\v\x2\x2\xD7\xD6\x3\x2\x2\x2\xD7\xD8\x3\x2\x2"+
		"\x2\xD8\xDB\x3\x2\x2\x2\xD9\xDB\a\v\x2\x2\xDA\xC7\x3\x2\x2\x2\xDA\xD9"+
		"\x3\x2\x2\x2\xDB\x14\x3\x2\x2\x2\xDC\xDD\a\f\x2\x2\xDD\x16\x3\x2\x2\x2"+
		"\xDE\xDF\t\a\x2\x2\xDF\xE0\x3\x2\x2\x2\xE0\xE1\b\f\x2\x2\xE1\x18\x3\x2"+
		"\x2\x2\x18\x2 \'/\x36<\x45KO]`h\xB4\xB7\xBC\xBF\xC4\xC9\xCE\xD4\xD7\xDA"+
		"\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Practica02
